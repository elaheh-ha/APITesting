{
  "stats": {
    "suites": 7,
    "tests": 38,
    "passes": 36,
    "pending": 0,
    "failures": 2,
    "start": "2023-04-19T08:46:27.953Z",
    "end": "2023-04-19T08:47:31.999Z",
    "duration": 64046,
    "testsRegistered": 38,
    "passPercent": 94.73684210526315,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "385ed7a5-fd81-43cc-9af4-aea630160952",
      "title": "",
      "fullFile": "C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js",
      "file": "\\apiTests_Conversations.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "be702d07-6740-4feb-a22e-b0aa750a6a27",
          "title": "MeshAi-Conversations",
          "fullFile": "C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js",
          "file": "\\apiTests_Conversations.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: outer in \"MeshAi-Conversations\"",
              "fullTitle": "MeshAi-Conversations \"before all\" hook: outer in \"MeshAi-Conversations\"",
              "timedOut": false,
              "duration": 2373,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(8000);\nInquiry_auth_token=await FuncAssis.getAuthToken()\nconsole.log('Inquiry_auth_token--'+JSON.stringify(Inquiry_auth_token))",
              "err": {},
              "uuid": "5dfa1fcf-1135-4320-ad4c-904e627b1fb7",
              "parentUUID": "be702d07-6740-4feb-a22e-b0aa750a6a27",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4931fa1d-13d4-4795-a715-7ecd07f9e10b",
              "title": "1- List a users contacts",
              "fullFile": "C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js",
              "file": "\\apiTests_Conversations.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "TC1-Correct-UserData-When-everything-is-ready-Then-GettingUserContactList-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 1- List a users contacts TC1-Correct-UserData-When-everything-is-ready-Then-GettingUserContactList-is-Successfully",
                  "timedOut": false,
                  "duration": 1265,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/contacts?auth_token=${Inquiry_auth_token}`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .then( response =>{\n        console.log('response UserContactList is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err UserContactList  is->' +JSON.stringify( err.response.data) +\n            'with status Code='+ err.response.status);\n        done(err)\n    })",
                  "err": {},
                  "uuid": "3f6ce243-56d7-47a4-ae8e-c415613a9cde",
                  "parentUUID": "4931fa1d-13d4-4795-a715-7ecd07f9e10b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC2-WrongMethod-Data-When-everything-is-ready-Then-GettingUserContactList-is-Failed",
                  "fullTitle": "MeshAi-Conversations 1- List a users contacts TC2-WrongMethod-Data-When-everything-is-ready-Then-GettingUserContactList-is-Failed",
                  "timedOut": false,
                  "duration": 1224,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/contacts?auth_token=${Inquiry_auth_token}`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "debbd959-cd24-440c-9f3d-9a0882b2e1c3",
                  "parentUUID": "4931fa1d-13d4-4795-a715-7ecd07f9e10b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC3-IncorrectAuthToken-Data-When-everything-is-ready-Then-GettingUserContactList-is-Failed",
                  "fullTitle": "MeshAi-Conversations 1- List a users contacts TC3-IncorrectAuthToken-Data-When-everything-is-ready-Then-GettingUserContactList-is-Failed",
                  "timedOut": false,
                  "duration": 1217,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/contacts?auth_token=0000`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "eb5a0013-dc11-4269-bb9d-86b9135bef16",
                  "parentUUID": "4931fa1d-13d4-4795-a715-7ecd07f9e10b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC4-emptyAuthToken-Data-When-everything-is-ready-Then-GettingUserContactList-is-Failed",
                  "fullTitle": "MeshAi-Conversations 1- List a users contacts TC4-emptyAuthToken-Data-When-everything-is-ready-Then-GettingUserContactList-is-Failed",
                  "timedOut": false,
                  "duration": 1240,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/contacts?auth_token=`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "e2a98c2b-b8c7-4908-bdf7-35d7a95a6589",
                  "parentUUID": "4931fa1d-13d4-4795-a715-7ecd07f9e10b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3f6ce243-56d7-47a4-ae8e-c415613a9cde",
                "debbd959-cd24-440c-9f3d-9a0882b2e1c3",
                "eb5a0013-dc11-4269-bb9d-86b9135bef16",
                "e2a98c2b-b8c7-4908-bdf7-35d7a95a6589"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4946,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "68999da7-841a-4fae-b6c9-21e145975e45",
              "title": "2- List a users conversations",
              "fullFile": "C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js",
              "file": "\\apiTests_Conversations.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "TC1-Correct-UserData-When-everything-is-ready-Then-GettingUsersConversations-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 2- List a users conversations TC1-Correct-UserData-When-everything-is-ready-Then-GettingUsersConversations-is-Successfully",
                  "timedOut": false,
                  "duration": 1267,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations?auth_token=${Inquiry_auth_token}`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err   is->' +JSON.stringify( err.response.data) +\n            'with status Code='+ err.response.status);\n        done(err)\n    })",
                  "err": {},
                  "uuid": "3e6c1fec-cc27-48a0-bc83-71e3cf2e1fe6",
                  "parentUUID": "68999da7-841a-4fae-b6c9-21e145975e45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC2-WrongMethod-Data-When-everything-is-ready-Then-GettingUsersConversations-is-Failed",
                  "fullTitle": "MeshAi-Conversations 2- List a users conversations TC2-WrongMethod-Data-When-everything-is-ready-Then-GettingUsersConversations-is-Failed",
                  "timedOut": false,
                  "duration": 1233,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations?auth_token=${Inquiry_auth_token}`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "c1efb132-e00b-42f2-acb9-ee78171340e4",
                  "parentUUID": "68999da7-841a-4fae-b6c9-21e145975e45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC3-IncorrectAuthToken-Data-When-everything-is-ready-Then-GettingUsersConversations-is-Failed",
                  "fullTitle": "MeshAi-Conversations 2- List a users conversations TC3-IncorrectAuthToken-Data-When-everything-is-ready-Then-GettingUsersConversations-is-Failed",
                  "timedOut": false,
                  "duration": 1241,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations?auth_token=0000`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "027a2ca7-b7b5-4b3c-a404-6ae70f08eb61",
                  "parentUUID": "68999da7-841a-4fae-b6c9-21e145975e45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC4-emptyAuthToken-Data-When-everything-is-ready-Then-GettingUsersConversations-is-Failed",
                  "fullTitle": "MeshAi-Conversations 2- List a users conversations TC4-emptyAuthToken-Data-When-everything-is-ready-Then-GettingUsersConversations-is-Failed",
                  "timedOut": false,
                  "duration": 1244,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations?auth_token=`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "a0ef09bc-f48d-4257-923a-fa0f6a1d1ed4",
                  "parentUUID": "68999da7-841a-4fae-b6c9-21e145975e45",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e6c1fec-cc27-48a0-bc83-71e3cf2e1fe6",
                "c1efb132-e00b-42f2-acb9-ee78171340e4",
                "027a2ca7-b7b5-4b3c-a404-6ae70f08eb61",
                "a0ef09bc-f48d-4257-923a-fa0f6a1d1ed4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4985,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "78bd86b8-c97d-479d-802a-a961e05d7439",
              "title": "3- Query a users contacts",
              "fullFile": "C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js",
              "file": "\\apiTests_Conversations.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "TC1-3-Correct-QueryData-When-everything-is-ready-Then-QueryUsersContacts-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 3- Query a users contacts TC1-3-Correct-QueryData-When-everything-is-ready-Then-QueryUsersContacts-is-Successfully",
                  "timedOut": false,
                  "duration": 1252,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/audience?auth_token=${Inquiry_auth_token}&\n                             selectors[][type]=Team&selectors[][id]=19&\n                             selectors[][job_id]=257&\n                             selectors[][shift_option]=on_now&selectors[][shift_option]=off_now`,\n    headers: ApiConfig.headers\n};\n\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err   is->' +JSON.stringify( err.response.data) +\n            'with status Code='+ err.response.status);\n        done(err)\n    })",
                  "err": {},
                  "uuid": "1a5b77ea-6633-4b5f-8c5e-9b7efe4f6b8a",
                  "parentUUID": "78bd86b8-c97d-479d-802a-a961e05d7439",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC2-3-Correct-QueryData-When-everything-is-ready-Then-QueryUsersContacts-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 3- Query a users contacts TC2-3-Correct-QueryData-When-everything-is-ready-Then-QueryUsersContacts-is-Successfully",
                  "timedOut": false,
                  "duration": 1274,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/audience?auth_token=${Inquiry_auth_token}&\n                             selectors[][type]=Team&selectors[][id]=19&\n                             selectors[][shift_option]=on_now&selectors[][shift_option]=off_now`,\n    headers: ApiConfig.headers\n};\n\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err   is->' +JSON.stringify( err.response.data) +\n            'with status Code='+ err.response.status);\n        done(err)\n    })",
                  "err": {},
                  "uuid": "a56558cf-480c-43f3-aa8f-84851a9111cb",
                  "parentUUID": "78bd86b8-c97d-479d-802a-a961e05d7439",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC3-3-Correct-QueryData-When-everything-is-ready-Then-QueryUsersContacts-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 3- Query a users contacts TC3-3-Correct-QueryData-When-everything-is-ready-Then-QueryUsersContacts-is-Successfully",
                  "timedOut": false,
                  "duration": 1257,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/audience?auth_token=${Inquiry_auth_token}&\n                             selectors[][shift_option]=on_now&selectors[][shift_option]=off_now`,\n    headers: ApiConfig.headers\n};\n\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err   is->' +JSON.stringify( err.response.data) +\n            'with status Code='+ err.response.status);\n        done(err)\n    })",
                  "err": {},
                  "uuid": "4c36ef33-d690-4324-9ec2-5a78a9c0fa59",
                  "parentUUID": "78bd86b8-c97d-479d-802a-a961e05d7439",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC4-3-Correct-QueryData-When-everything-is-ready-Then-QueryUsersContacts-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 3- Query a users contacts TC4-3-Correct-QueryData-When-everything-is-ready-Then-QueryUsersContacts-is-Successfully",
                  "timedOut": false,
                  "duration": 1238,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/audience?auth_token=${Inquiry_auth_token}`,\n    headers: ApiConfig.headers\n};\n\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err   is->' +JSON.stringify( err.response.data) +\n            'with status Code='+ err.response.status);\n        done(err)\n    })",
                  "err": {},
                  "uuid": "831c3acf-5bb7-4b47-ab65-c7c7e935f6fc",
                  "parentUUID": "78bd86b8-c97d-479d-802a-a961e05d7439",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC5-3-IncorrectAuthToken-Data-When-everything-is-ready-Then-QueryUsersContacts-is-Failed",
                  "fullTitle": "MeshAi-Conversations 3- Query a users contacts TC5-3-IncorrectAuthToken-Data-When-everything-is-ready-Then-QueryUsersContacts-is-Failed",
                  "timedOut": false,
                  "duration": 1245,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/audience?auth_token=0000000000`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "fc6bd0a1-98c2-45d7-a6c0-e5a52dc10ee2",
                  "parentUUID": "78bd86b8-c97d-479d-802a-a961e05d7439",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC6-3-emptyAuthToken-Data-When-everything-is-ready-Then-QueryUsersContacts-is-Failed",
                  "fullTitle": "MeshAi-Conversations 3- Query a users contacts TC6-3-emptyAuthToken-Data-When-everything-is-ready-Then-QueryUsersContacts-is-Failed",
                  "timedOut": false,
                  "duration": 1233,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/audience?auth_token=`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "d5053d49-0b6b-40cd-8731-836c53f1391e",
                  "parentUUID": "78bd86b8-c97d-479d-802a-a961e05d7439",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a5b77ea-6633-4b5f-8c5e-9b7efe4f6b8a",
                "a56558cf-480c-43f3-aa8f-84851a9111cb",
                "4c36ef33-d690-4324-9ec2-5a78a9c0fa59",
                "831c3acf-5bb7-4b47-ab65-c7c7e935f6fc",
                "fc6bd0a1-98c2-45d7-a6c0-e5a52dc10ee2",
                "d5053d49-0b6b-40cd-8731-836c53f1391e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7499,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4b54c59f-b48b-4e7d-9f6a-9c666ed2837c",
              "title": "4- Replying to a conversation",
              "fullFile": "C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js",
              "file": "\\apiTests_Conversations.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "TC1-Correct-UserData-When-everything-is-ready-Then-ReplyingConversation-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 4- Replying to a conversation TC1-Correct-UserData-When-everything-is-ready-Then-ReplyingConversation-is-Successfully",
                  "timedOut": false,
                  "duration": 1364,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/3023/reply`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err   is->' +JSON.stringify( err.response.data) +\n            'with status Code='+ err.response.status);\n        done(err)\n    })",
                  "err": {},
                  "uuid": "b4050c1d-79f6-4419-8470-d40a0f313800",
                  "parentUUID": "4b54c59f-b48b-4e7d-9f6a-9c666ed2837c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC2-IncorrectConversationID-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 4- Replying to a conversation TC2-IncorrectConversationID-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1235,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/000000000/reply`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "1c4dc437-37fe-41bb-8f1a-09cf6edc71c5",
                  "parentUUID": "4b54c59f-b48b-4e7d-9f6a-9c666ed2837c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC3-EmptyConversationID-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 4- Replying to a conversation TC3-EmptyConversationID-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1259,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/reply`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "18a8d99f-a9c4-4e9b-bbf8-0bc73530495c",
                  "parentUUID": "4b54c59f-b48b-4e7d-9f6a-9c666ed2837c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC4-LongConversationText-Data-When-everything-is-ready-Then-ReplyingConversation-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 4- Replying to a conversation TC4-LongConversationText-Data-When-everything-is-ready-Then-ReplyingConversation-is-Successfully",
                  "timedOut": false,
                  "duration": 1273,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'body': 'Sure,I can send it to you right away by API. Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/3023/reply`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "ecef981e-ce04-4521-80a3-d44135489873",
                  "parentUUID": "4b54c59f-b48b-4e7d-9f6a-9c666ed2837c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC5-EmptyConversationText-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 4- Replying to a conversation TC5-EmptyConversationText-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1233,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'body':'',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/3023/reply`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 422, `\\r\\nExpected: ${422}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "2a7ecd31-2aa2-4983-928d-e2fe40c4e7dc",
                  "parentUUID": "4b54c59f-b48b-4e7d-9f6a-9c666ed2837c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC6-WrongMethod-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 4- Replying to a conversation TC6-WrongMethod-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1274,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/3023/reply`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "5e1da0f7-1ab5-4fd4-a1f6-742b038118ea",
                  "parentUUID": "4b54c59f-b48b-4e7d-9f6a-9c666ed2837c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC7-IncorrectAuthToken-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 4- Replying to a conversation TC7-IncorrectAuthToken-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1254,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': '000000'\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/3023/reply`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "f5b13ab6-e143-4a41-b0b5-700ec59bf61c",
                  "parentUUID": "4b54c59f-b48b-4e7d-9f6a-9c666ed2837c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC8-emptyAuthToken-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 4- Replying to a conversation TC8-emptyAuthToken-Data-When-everything-is-ready-Then-ReplyingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1225,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': ''\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/3023/reply`,\n    headers: ApiConfig.headers,\n    data : data\n};\n\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "cf1b8009-5138-4b66-830c-620d2f7f0a73",
                  "parentUUID": "4b54c59f-b48b-4e7d-9f6a-9c666ed2837c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b4050c1d-79f6-4419-8470-d40a0f313800",
                "1c4dc437-37fe-41bb-8f1a-09cf6edc71c5",
                "18a8d99f-a9c4-4e9b-bbf8-0bc73530495c",
                "ecef981e-ce04-4521-80a3-d44135489873",
                "2a7ecd31-2aa2-4983-928d-e2fe40c4e7dc",
                "5e1da0f7-1ab5-4fd4-a1f6-742b038118ea",
                "f5b13ab6-e143-4a41-b0b5-700ec59bf61c",
                "cf1b8009-5138-4b66-830c-620d2f7f0a73"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10117,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "aba0ca31-69f9-4299-898d-29319d6cb7eb",
              "title": "5- Retrieving conversation details",
              "fullFile": "C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js",
              "file": "\\apiTests_Conversations.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "TC1-Correct-ConversationData-When-everything-is-ready-Then-GettingConversationsDetails-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 5- Retrieving conversation details TC1-Correct-ConversationData-When-everything-is-ready-Then-GettingConversationsDetails-is-Successfully",
                  "timedOut": false,
                  "duration": 1279,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/3023?auth_token=${Inquiry_auth_token}`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err   is->' +JSON.stringify( err.response.data) +\n            'with status Code='+ err.response.status);\n        done(err)\n    })",
                  "err": {},
                  "uuid": "0da9c984-dfc6-456b-a999-45afb9409cc1",
                  "parentUUID": "aba0ca31-69f9-4299-898d-29319d6cb7eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC2-IncorrectConversationID-Data-When-everything-is-ready-Then-GettingConversationsDetails-is-Failed",
                  "fullTitle": "MeshAi-Conversations 5- Retrieving conversation details TC2-IncorrectConversationID-Data-When-everything-is-ready-Then-GettingConversationsDetails-is-Failed",
                  "timedOut": false,
                  "duration": 1236,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/000000000?auth_token=${Inquiry_auth_token}`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "1dd5945b-b37b-445c-9a58-10003a64e21f",
                  "parentUUID": "aba0ca31-69f9-4299-898d-29319d6cb7eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC3-EmptyConversationID-Data-When-everything-is-ready-Then-GettingConversationsDetails-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 5- Retrieving conversation details TC3-EmptyConversationID-Data-When-everything-is-ready-Then-GettingConversationsDetails-is-Successfully",
                  "timedOut": false,
                  "duration": 1301,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations?auth_token=${Inquiry_auth_token}`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err   is->' +JSON.stringify( err.response.status) )\n        assert.equal(err.response.status, 422, `\\r\\nExpected: ${422}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "0d36ae4f-b01f-4b4f-9013-bb8cb84967f1",
                  "parentUUID": "aba0ca31-69f9-4299-898d-29319d6cb7eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC4-WrongMethod-Data-When-everything-is-ready-Then-GettingConversationsDetails-is-Failed",
                  "fullTitle": "MeshAi-Conversations 5- Retrieving conversation details TC4-WrongMethod-Data-When-everything-is-ready-Then-GettingConversationsDetails-is-Failed",
                  "timedOut": false,
                  "duration": 1220,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/3023?auth_token=${Inquiry_auth_token}`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "7b333755-8eff-46fb-8763-ffdc80c1e475",
                  "parentUUID": "aba0ca31-69f9-4299-898d-29319d6cb7eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC5-IncorrectAuthToken-Data-When-everything-is-ready-Then-GettingConversationsDetails-is-Failed",
                  "fullTitle": "MeshAi-Conversations 5- Retrieving conversation details TC5-IncorrectAuthToken-Data-When-everything-is-ready-Then-GettingConversationsDetails-is-Failed",
                  "timedOut": false,
                  "duration": 1213,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/3023?auth_token=0000`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "ef6cadf1-4268-429b-b9fc-cb59ef6932bf",
                  "parentUUID": "aba0ca31-69f9-4299-898d-29319d6cb7eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC6-emptyAuthToken-Data-When-everything-is-ready-Then-GettingConversationsDetails-is-Failed",
                  "fullTitle": "MeshAi-Conversations 5- Retrieving conversation details TC6-emptyAuthToken-Data-When-everything-is-ready-Then-GettingConversationsDetails-is-Failed",
                  "timedOut": false,
                  "duration": 1215,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations/3023?auth_token=`,\n    headers: ApiConfig.headers\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "334701ad-674b-4aa8-99ed-8c63f37a4c24",
                  "parentUUID": "aba0ca31-69f9-4299-898d-29319d6cb7eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0da9c984-dfc6-456b-a999-45afb9409cc1",
                "1dd5945b-b37b-445c-9a58-10003a64e21f",
                "0d36ae4f-b01f-4b4f-9013-bb8cb84967f1",
                "7b333755-8eff-46fb-8763-ffdc80c1e475",
                "ef6cadf1-4268-429b-b9fc-cb59ef6932bf",
                "334701ad-674b-4aa8-99ed-8c63f37a4c24"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7464,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6ddf25fe-3c57-41a7-9ce6-2cdaeaafd8dd",
              "title": "6- Starting a conversation",
              "fullFile": "C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js",
              "file": "\\apiTests_Conversations.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "TC1-6-Correct-UserData-When-everything-is-ready-Then-StartingConversation-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 6- Starting a conversation TC1-6-Correct-UserData-When-everything-is-ready-Then-StartingConversation-is-Successfully",
                  "timedOut": false,
                  "duration": 1260,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'subject': 'API Testing',\n    'recipient_user_ids': '23,6283',\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err   is->' +JSON.stringify( err.response.data) +\n            'with status Code='+ err.response.status);\n        done(err)\n    })",
                  "err": {},
                  "uuid": "d4d29dc8-2451-4d6c-9fd4-fec2e0f22e87",
                  "parentUUID": "6ddf25fe-3c57-41a7-9ce6-2cdaeaafd8dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC2-6-LongSubjectText-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 6- Starting a conversation TC2-6-LongSubjectText-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "timedOut": true,
                  "duration": 8013,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'subject': 'API TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI TestingAPI Testing',\n    'recipient_user_ids': '23,6283',\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err  is->' +JSON.stringify(err.response.status)) ;\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {
                    "message": "Error: Timeout of 8000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js)",
                    "estack": "Error: Timeout of 8000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                    "diff": null
                  },
                  "uuid": "fbd8a6e2-0e55-43ee-98a3-d5f6e64bb3bc",
                  "parentUUID": "6ddf25fe-3c57-41a7-9ce6-2cdaeaafd8dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC3-6-EmptySubjectText-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 6- Starting a conversation TC3-6-EmptySubjectText-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1247,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n   // 'subject': '',\n    'recipient_user_ids': '23,6283',\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err  is->' +JSON.stringify(err.response.status)) ;\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "4bb8fa22-e539-45e9-aa7b-b8a541540468",
                  "parentUUID": "6ddf25fe-3c57-41a7-9ce6-2cdaeaafd8dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC4-6-LongConversationText-Data-When-everything-is-ready-Then-StartingConversation-is-Successfully",
                  "fullTitle": "MeshAi-Conversations 6- Starting a conversation TC4-6-LongConversationText-Data-When-everything-is-ready-Then-StartingConversation-is-Successfully",
                  "timedOut": false,
                  "duration": 1267,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'subject': 'API Testing',\n    'recipient_user_ids': '23,6283',\n    'body': 'Sure,I can send it to you right away by API. Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.Sure,I can send it to you right away by API.',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "678bdccb-1fff-4a15-a95d-6ac01fef27bb",
                  "parentUUID": "6ddf25fe-3c57-41a7-9ce6-2cdaeaafd8dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC5-6-EmptyConversationText-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 6- Starting a conversation TC5-6-EmptyConversationText-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "timedOut": true,
                  "duration": 8015,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'subject': 'API Testing',\n    'recipient_user_ids': '23,6283',\n    'body': '',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .catch( (err) => {\n        console.log('err  is->' +JSON.stringify(err.response.status)) ;\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {
                    "message": "Error: Timeout of 8000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js)",
                    "estack": "Error: Timeout of 8000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Xamani\\WebstormProjects\\mesh-tests\\apiTests_Conversations.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                    "diff": null
                  },
                  "uuid": "398e428f-33a8-4196-a5ed-ac3ff717b2d6",
                  "parentUUID": "6ddf25fe-3c57-41a7-9ce6-2cdaeaafd8dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC6-6-WrongRecipientId-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 6- Starting a conversation TC6-6-WrongRecipientId-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1252,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'subject': 'API Testing',\n    'recipient_user_ids': '2300000000000000,6283,000000000000',\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .catch( (err) => {\n        console.log('err  is->' +JSON.stringify(err.response.status)) ;\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "5f719e86-5a97-4e2c-bfbb-238d35ec2ccd",
                  "parentUUID": "6ddf25fe-3c57-41a7-9ce6-2cdaeaafd8dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC7-6-EmptyRecipientId-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 6- Starting a conversation TC7-6-EmptyRecipientId-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1217,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(8000);\nlet data = qs.stringify({\n    'subject': 'API Testing',\n    'recipient_user_ids': '',\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .catch( (err) => {\n        console.log('err  is->' +JSON.stringify(err.response.status)) ;\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "7f54a8c3-6a62-40da-ae60-9f14b8cc69a1",
                  "parentUUID": "6ddf25fe-3c57-41a7-9ce6-2cdaeaafd8dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC8-6-WrongMethod-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 6- Starting a conversation TC8-6-WrongMethod-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1296,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(18000);\nlet data = qs.stringify({\n    'subject': 'API Testing',\n    'recipient_user_ids': '23,6283',\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': Inquiry_auth_token\n});\nvar config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .then( response =>{\n        console.log('response  is->' +JSON.stringify( response.data)) ;\n        assert.equal(response.status, 200, `\\r\\nExpected: ${200}\\r\\nActual: ${JSON.stringify(response.status)}`);\n        done();\n    })\n    .catch( (err) => {\n        console.log('err  is->' +JSON.stringify(err.response.status)) ;\n        assert.equal(err.response.status, 404, `\\r\\nExpected: ${404}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "fa65ac12-2504-4819-8483-f310f79c3560",
                  "parentUUID": "6ddf25fe-3c57-41a7-9ce6-2cdaeaafd8dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC9-6-IncorrectAuthToken-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 6- Starting a conversation TC9-6-IncorrectAuthToken-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1715,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(18000);\nlet data = qs.stringify({\n    'subject': 'API Testing',\n    'recipient_user_ids': '23,6283',\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': '00000000000'\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations`,\n    headers: ApiConfig.headers,\n    data : data\n};\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "ca146234-e924-4ce7-b93d-9486f3eae148",
                  "parentUUID": "6ddf25fe-3c57-41a7-9ce6-2cdaeaafd8dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TC10-6-emptyAuthToken-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "fullTitle": "MeshAi-Conversations 6- Starting a conversation TC10-6-emptyAuthToken-Data-When-everything-is-ready-Then-StartingConversation-is-Failed",
                  "timedOut": false,
                  "duration": 1235,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(18000);\nlet data = qs.stringify({\n    'subject': 'API Testing',\n    'recipient_user_ids': '23,6283',\n    'body': 'Sure,I can send it to you right away by API. ',\n    'auth_token': ''\n});\nvar config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: `${ApiConfig.targetUrl}/conversations`,\n    headers: ApiConfig.headers,\n    data : data\n};\n\naxios(config )\n    .catch( (err) => {\n        assert.equal(err.response.status, 401, `\\r\\nExpected: ${401}\\r\\nActual: ${JSON.stringify(err.response.status)}`);\n        done()\n    })",
                  "err": {},
                  "uuid": "ddfff8b5-c1ea-4063-bb69-4a38d93fa2e5",
                  "parentUUID": "6ddf25fe-3c57-41a7-9ce6-2cdaeaafd8dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d4d29dc8-2451-4d6c-9fd4-fec2e0f22e87",
                "4bb8fa22-e539-45e9-aa7b-b8a541540468",
                "678bdccb-1fff-4a15-a95d-6ac01fef27bb",
                "5f719e86-5a97-4e2c-bfbb-238d35ec2ccd",
                "7f54a8c3-6a62-40da-ae60-9f14b8cc69a1",
                "fa65ac12-2504-4819-8483-f310f79c3560",
                "ca146234-e924-4ce7-b93d-9486f3eae148",
                "ddfff8b5-c1ea-4063-bb69-4a38d93fa2e5"
              ],
              "failures": [
                "fbd8a6e2-0e55-43ee-98a3-d5f6e64bb3bc",
                "398e428f-33a8-4196-a5ed-ac3ff717b2d6"
              ],
              "pending": [],
              "skipped": [],
              "duration": 26517,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}